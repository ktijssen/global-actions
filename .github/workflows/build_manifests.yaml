name: BuildManifests

on:
  workflow_call:
    inputs:
      projectName:
        default: ${{ github.workflow }}
        required: false
        type: string
      buildType:
        default: kustomize
        required: false
        type: string
      containerRegistry:
        default: 'docker.io'
        required: false
        type: string
      gitTag:
        required: true
        type: string
      helmVersion:
        default: '0.0.1'
        required: false
        type: string
      namespace:
        default: default
        required: false
        type: string
      repoName:
        default: ''
        required: false
        type: string
jobs:
  BuildManifests:
    name: Build Manifests files
    runs-on: [self-hosted]
    steps:
      - name: Clean Working dir
        uses: ktijssen/clean-workspace@v1  
      - name: Checkout Project Repo
        uses: actions/checkout@v3

      - name: Replace variables in Kubernetes Manifests
        shell: bash
        working-directory: ./kubernetes
        run: |
          echo "Applying build version to Kubernetes manifests"
          find . -type f -exec sed -i "s!%IMAGE_VERSION%!${{ inputs.gitTag }}!g" {} \;

          echo "Applying servicename to Kubernetes manifests"
          find . -type f -exec sed -i "s!%SERVICE_NAME%!${{ inputs.projectName }}!g" {} \;

          echo "Applying container repo to templates"
          if [ -z ${{ inputs.repoName }} ]; then
            find . -type f -exec sed -i "s!%IMAGE_REPO%/!${{ inputs.repoName }}!g" {} \;
          else
            find . -type f -exec sed -i "s!%IMAGE_REPO%!${{ inputs.repoName }}!g" {} \;
          fi
          echo "Applying container registry to templates"
          if [ -z ${{ inputs.containerRegistry }} ]; then
            find . -type f -exec sed -i "s!%IMAGE_HOST%/!${{ inputs.containerRegistry }}!g" {} \;
          else
            find . -type f -exec sed -i "s!%IMAGE_HOST%!${{ inputs.containerRegistry }}!g" {} \;
          fi

          echo "Applying GitHub Properties to templates"
          find . -type f -exec sed -i "s!%GITHUB_URL%!${{ github.server_url }}!g" {} \;
          find . -type f -exec sed -i "s!%GITHUB_REPO%!${{ github.repository }}!g" {} \;
          find . -type f -exec sed -i "s!%GITHUB_JOB%!${{ github.job }}!g" {} \;
          find . -type f -exec sed -i "s!%GITHUB_RUN_ID%!${{ github.run_id }}!g" {} \;
          find . -type f -exec sed -i "s!%GITHUB_RUN_NUMBER%!${{ github.run_number }}!g" {} \;

      # - name: Install Kubectl
      #   uses: azure/setup-kubectl@v3
      #   with:
      #     version: latest

      - name: Generate Helm template
        shell: bash
        if: "${{ inputs.buildType == 'helm' }}"
        working-directory: ./kubernetes
        run: |
          set -x
          for overlay in overlays/*; do
            kustomizeEnv=$(echo ${overlay} | cut -d '/' -f2)
            helm template ${{ inputs.projectName }} ./${{ inputs.helmVersion }} ./overlays/${kustomizeEnv}/values.yaml --namespace ${{ inputs.namespace }} --include-crds > ./overlays/${kustomizeEnv}/helm-intall.yaml
          done

      - name: Generate Kubernetes YAML
        shell: bash
        working-directory: ./kubernetes
        run: |
          mkdir -p kube-artifacts
          for overlay in overlays/*; do
            kustomizeEnv=$(echo ${overlay} | cut -d '/' -f2)
            kubectl kustomize ./overlays/${kustomizeEnv} > ./kube-artifacts/${{ inputs.projectName }}-${kustomizeEnv}-kubernetes.yaml
          done

      - name: Upload Kubernetes manifests as pipeline artifact for further usage
        uses: actions/upload-artifact@v3
        with:
          name: kube-artifacts
          path: ./kubernetes/kube-artifacts
          retention-days: 1